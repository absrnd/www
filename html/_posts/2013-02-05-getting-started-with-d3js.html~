---
layout: d3experiment
title: Getting Started with D3.js
subtitle: Data visualization with javascript
excerpt: Interactive and animated data 
categories: D3 javascrpt vizualisation
---


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Data visualization using D3.js</h2>
<div class="outline-text-2" id="text-1">



</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1">Getting started</h3>
<div class="outline-text-3" id="text-1-1">


<p>
Using the <a href="http://www.recursion.org/d3-for-mere-mortals/">D3 for mere mortals</a> article as an on-ramp, I have setup this page to 
include the <a href="http://d3js.org/">D3.js</a> library from the CDN, then I have added the following HTML
to this page:
</p>



<pre class="example">&lt;div id="rect-demo"&gt;&lt;/div&gt;
</pre>


<p>
Then add the following Javascript:
</p>



<pre class="src src-js"><span class="org-keyword">var</span> <span class="org-variable-name">rectDemo</span> = d3.select(<span class="org-string">"#rect-demo"</span>).
  append(<span class="org-string">"svg:svg"</span>).
  attr(<span class="org-string">"width"</span>, 400).
  attr(<span class="org-string">"height"</span>, 300);

rectDemo.append(<span class="org-string">"svg:rect"</span>).
  attr(<span class="org-string">"x"</span>, 100).
  attr(<span class="org-string">"y"</span>, 100).
  attr(<span class="org-string">"height"</span>, 100).
  attr(<span class="org-string">"width"</span>, 200);
</pre>


<p>
To produce the following output:
</p>


<div id="rect-demo"></div>
<script>
var rectDemo = d3.select("#rect-demo").
  append("svg:svg").
  attr("width", 400).
  attr("height", 300);

rectDemo.append("svg:rect").
  attr("x", 100).
  attr("y", 100).
  attr("height", 100).
  attr("width", 200);
</script>

<p>
Ok, thats all well and fine, but lets at least get something that resembles a graph.. 
what about a BAR GRAPH?!.. so lets display the following data:
</p>


var data = [{year: 2006, books: 54},
            {year: 2007, books: 43},
            {year: 2008, books: 41},
            {year: 2009, books: 44},
            {year: 2010, books: 35}];

<p>
Which gives us the following graph:
</p>


<div id="bar-graph-demo"></div>
<script>
var data = [{year: 2006, books: 54},
            {year: 2007, books: 43},
            {year: 2008, books: 41},
            {year: 2009, books: 44},
            {year: 2010, books: 35}];

var barWidth = 40;
var width = (barWidth + 10) * data.length;
var height = 200;

var x = d3.scale.linear().domain([0, data.length]).range([0, width]);
var y = d3.scale.linear().domain([0, d3.max(data, function(datum) { return datum.books; })]).
  rangeRound([0, height]);

// add the canvas to the DOM
var barDemo = d3.select("#bar-graph-demo").
  append("svg:svg").
  attr("width", width).
  attr("height", height);

barDemo.selectAll("rect").
  data(data).
  enter().
  append("svg:rect").
  attr("x", function(datum, index) { return x(index); }).
  attr("y", function(datum) { return height - y(datum.books); }).
  attr("height", function(datum) { return y(datum.books); }).
  attr("width", barWidth).
  attr("fill", "#2d578b");
</script>

</div>
</div>
</div>
